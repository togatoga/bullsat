{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u30bc\u30ed\u304b\u3089\u4f5c\u308bCDCL SAT\u30bd\u30eb\u30d0(bullsat) \u306f\u3058\u3081\u306b \u5145\u8db3\u53ef\u80fd\u6027\u554f\u984c(satisfiability problem)\u3068\u306f\u4e0e\u3048\u3089\u308c\u305f\u4e8c\u5024(true/false)\u306e\u547d\u984c\u8ad6\u7406\u5f0f\u304c\u5145\u8db3\u53ef\u80fd( SAT )\u306a\u5909\u6570\u306e\u771f\u507d\u5024\u306e\u5272\u308a\u5f53\u3066\u304c\u5b58\u5728\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u305d\u3046\u3044\u3063\u305f\u5272\u308a\u5f53\u3066\u304c\u5b58\u5728\u3057\u306a\u3044\u5145\u8db3\u4e0d\u80fd( UNSAT )\u304b\u3092\u5224\u5b9a\u3059\u308b\u554f\u984c\u3067\u3059\u3002 \u3000 \u547d\u984c\u5909\u6570( Variable ) true/false\u306e\u4e8c\u5024\u5909\u6570 \u30ea\u30c6\u30e9\u30eb( Literal ) \u547d\u984c\u5909\u6570\u307e\u305f\u306f\u305d\u306e\u5426\u5b9a \u7bc0( Clause ) \u8907\u6570\u306e\u30ea\u30c6\u30e9\u30eb\u3092or\u3067\u7d50\u3093\u3060\u5f0f \u547d\u984c\u8ad6\u7406\u5f0f \u8907\u6570\u306e\u7bc0\u3092and\u3067\u7d50\u3093\u3060\u5f0f \u4ee5\u4e0b\u306e\u547d\u984c\u8ad6\u7406\u5f0f\u3092\u4f8b\u306b\u4e0a\u3052\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 $$ (x_1\\lor\\lnot x_3)\\land(x_2\\lor x_3\\lor\\lnot x_1) $$ \\(x_1\\)\u3068\\(\\lnot x_1\\)\u306f\u30ea\u30c6\u30e9\u30eb\u3067\u3059\u3002\u66f4\u306b\\(x_1\\)\u306f \u6b63 \u306e\u30ea\u30c6\u30e9\u30eb\u3001\\(\\lnot x_1\\)\u306f \u8ca0 \u306e\u30ea\u30c6\u30e9\u30eb\u3068\u547c\u3073\u307e\u3059\u3002 \\((x_1\\lor\\lnot x_3)\\)\u306fClause\u3067\u3059\u3002 \u4e0a\u8a18\u306e\u8ad6\u7406\u5f0f\u306fSAT\u3067\u3059\u3002\u4ee5\u4e0b\u304cSAT\u306a\u771f\u507d\u5024\u306e\u5272\u308a\u5f53\u3066\u3067\u3059\u3002 $$ x_1=true,x_2=true,x_3=false $$ \u9006\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ad6\u7406\u5f0f\u306f\u3001SAT\u306a\u771f\u507d\u5024\u306e\u5272\u308a\u5f53\u3066\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u3067UNSAT\u3067\u3059\u3002 $$ (x_1 \\lor \\lnot x_2 \\lor x_3) \\land (\\lnot x_1 \\lor x_2) \\land (x_1 \\lor x_2 \\lor \\lnot x_3) \\land (x_1 \\lor x_3) \\land (\\lnot x_1 \\lor \\lnot x_2 \\lor x_3) $$ Clause\u306e\u9577\u3055\u304c3\u4ee5\u4e0a(e.g. \\((x_2\\lor x_3\\lor\\lnot x_1)\\)\u306eSAT\u554f\u984c\u306fNP\u5b8c\u5168\u3068\u3044\u3046\u554f\u984c\u306b\u5c5e\u3057\u3001\u52b9\u7387\u7684\u306b\u89e3\u3051\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u7121\u3044\u3068\u4e00\u822c\u7684\u306b\u306f\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002 SAT\u554f\u984c\u3092\u89e3\u304f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092 SAT\u30bd\u30eb\u30d0 \u3068\u547c\u3073\u307e\u3059\u3002SAT\u30bd\u30eb\u30d0\u306e\u5927\u304d\u306a\u6027\u80fd\u5411\u4e0a\u3068\u3057\u3066\u3001Conflict-Driven-Clause-Learning( CDCL )\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 CDCL\u3068\u306f\u77db\u76fe( Conflict )\u304b\u3089\u77db\u76fe\u306e\u539f\u56e0\u3068\u306a\u3063\u305f\u5909\u6570\u306e\u5272\u308a\u5f53\u3066\u3092\u9632\u3050\u65b0\u305f\u306a\u7bc0( Clause )\u3092\u5c0e\u51fa\u3057\u3066\u3001\u63a2\u7d22\u306e\u679d\u5208\u308a\u3092\u884c\u3046\u3053\u3068\u3067\u9ad8\u901f\u306bSAT\u3092\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002CDCL\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u6271\u3048\u308b\u5909\u6570\u306e\u6570\u304c\u5897\u3048\u3001\u73fe\u5b9f\u554f\u984c\u304b\u3089\u6d3e\u751f\u3057\u305f\u6570\u5341\u4e07~\u6570\u767e\u4e07\u306e\u5909\u6570\u306eSAT\u554f\u984c\u3092\u89e3\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Note \u672c\u8a18\u4e8b\u3068SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30fc\u30c9\u306f GitHub \u4e0a\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002pull request\u306f\u5927\u6b53\u8fce\u3067\u3059\u3002 \u8a00\u8a9e\u306f C++17 \u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u306f clang++ \u3068\u3057\u307e\u3059\u3002\u74b0\u5883\u306f Linux \u307e\u305f\u306f macOS \u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea( std )\u306e\u307f\u3060\u3051\u3068\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u7b46\u8005\u306e\u74b0\u5883\u3067\u3059\u3002 % cat /etc/os-release NAME=\"Ubuntu\" VERSION=\"20.04.1 LTS (Focal Fossa)\" ID=ubuntu ID_LIKE=debian PRETTY_NAME=\"Ubuntu 20.04.1 LTS\" VERSION_ID=\"20.04\" HOME_URL=\"https://www.ubuntu.com/\" SUPPORT_URL=\"https://help.ubuntu.com/\" BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\" PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\" VERSION_CODENAME=focal UBUNTU_CODENAME=focal % clang++ --version clang version 10.0.0-4ubuntu1 Target: x86_64-pc-linux-gnu Thread model: posix InstalledDir: /usr/bin C++17 \u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u672c\u8a18\u4e8b\u3067\u306f\u8a00\u8a9e\u81ea\u4f53\u306b\u3064\u3044\u3066\u306f\u8aac\u660e\u3044\u305f\u3057\u307e\u305b\u3093\u3002 \u305d\u308c\u3067\u306f\u59cb\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002","title":"\u30bc\u30ed\u304b\u3089\u4f5c\u308bCDCL SAT\u30bd\u30eb\u30d0(bullsat)"},{"location":"#cdcl-satbullsat","text":"","title":"\u30bc\u30ed\u304b\u3089\u4f5c\u308bCDCL SAT\u30bd\u30eb\u30d0(bullsat)"},{"location":"#_1","text":"\u5145\u8db3\u53ef\u80fd\u6027\u554f\u984c(satisfiability problem)\u3068\u306f\u4e0e\u3048\u3089\u308c\u305f\u4e8c\u5024(true/false)\u306e\u547d\u984c\u8ad6\u7406\u5f0f\u304c\u5145\u8db3\u53ef\u80fd( SAT )\u306a\u5909\u6570\u306e\u771f\u507d\u5024\u306e\u5272\u308a\u5f53\u3066\u304c\u5b58\u5728\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u305d\u3046\u3044\u3063\u305f\u5272\u308a\u5f53\u3066\u304c\u5b58\u5728\u3057\u306a\u3044\u5145\u8db3\u4e0d\u80fd( UNSAT )\u304b\u3092\u5224\u5b9a\u3059\u308b\u554f\u984c\u3067\u3059\u3002 \u3000 \u547d\u984c\u5909\u6570( Variable ) true/false\u306e\u4e8c\u5024\u5909\u6570 \u30ea\u30c6\u30e9\u30eb( Literal ) \u547d\u984c\u5909\u6570\u307e\u305f\u306f\u305d\u306e\u5426\u5b9a \u7bc0( Clause ) \u8907\u6570\u306e\u30ea\u30c6\u30e9\u30eb\u3092or\u3067\u7d50\u3093\u3060\u5f0f \u547d\u984c\u8ad6\u7406\u5f0f \u8907\u6570\u306e\u7bc0\u3092and\u3067\u7d50\u3093\u3060\u5f0f \u4ee5\u4e0b\u306e\u547d\u984c\u8ad6\u7406\u5f0f\u3092\u4f8b\u306b\u4e0a\u3052\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002 $$ (x_1\\lor\\lnot x_3)\\land(x_2\\lor x_3\\lor\\lnot x_1) $$ \\(x_1\\)\u3068\\(\\lnot x_1\\)\u306f\u30ea\u30c6\u30e9\u30eb\u3067\u3059\u3002\u66f4\u306b\\(x_1\\)\u306f \u6b63 \u306e\u30ea\u30c6\u30e9\u30eb\u3001\\(\\lnot x_1\\)\u306f \u8ca0 \u306e\u30ea\u30c6\u30e9\u30eb\u3068\u547c\u3073\u307e\u3059\u3002 \\((x_1\\lor\\lnot x_3)\\)\u306fClause\u3067\u3059\u3002 \u4e0a\u8a18\u306e\u8ad6\u7406\u5f0f\u306fSAT\u3067\u3059\u3002\u4ee5\u4e0b\u304cSAT\u306a\u771f\u507d\u5024\u306e\u5272\u308a\u5f53\u3066\u3067\u3059\u3002 $$ x_1=true,x_2=true,x_3=false $$ \u9006\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ad6\u7406\u5f0f\u306f\u3001SAT\u306a\u771f\u507d\u5024\u306e\u5272\u308a\u5f53\u3066\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u3067UNSAT\u3067\u3059\u3002 $$ (x_1 \\lor \\lnot x_2 \\lor x_3) \\land (\\lnot x_1 \\lor x_2) \\land (x_1 \\lor x_2 \\lor \\lnot x_3) \\land (x_1 \\lor x_3) \\land (\\lnot x_1 \\lor \\lnot x_2 \\lor x_3) $$ Clause\u306e\u9577\u3055\u304c3\u4ee5\u4e0a(e.g. \\((x_2\\lor x_3\\lor\\lnot x_1)\\)\u306eSAT\u554f\u984c\u306fNP\u5b8c\u5168\u3068\u3044\u3046\u554f\u984c\u306b\u5c5e\u3057\u3001\u52b9\u7387\u7684\u306b\u89e3\u3051\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u7121\u3044\u3068\u4e00\u822c\u7684\u306b\u306f\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002 SAT\u554f\u984c\u3092\u89e3\u304f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092 SAT\u30bd\u30eb\u30d0 \u3068\u547c\u3073\u307e\u3059\u3002SAT\u30bd\u30eb\u30d0\u306e\u5927\u304d\u306a\u6027\u80fd\u5411\u4e0a\u3068\u3057\u3066\u3001Conflict-Driven-Clause-Learning( CDCL )\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002 CDCL\u3068\u306f\u77db\u76fe( Conflict )\u304b\u3089\u77db\u76fe\u306e\u539f\u56e0\u3068\u306a\u3063\u305f\u5909\u6570\u306e\u5272\u308a\u5f53\u3066\u3092\u9632\u3050\u65b0\u305f\u306a\u7bc0( Clause )\u3092\u5c0e\u51fa\u3057\u3066\u3001\u63a2\u7d22\u306e\u679d\u5208\u308a\u3092\u884c\u3046\u3053\u3068\u3067\u9ad8\u901f\u306bSAT\u3092\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002CDCL\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u6271\u3048\u308b\u5909\u6570\u306e\u6570\u304c\u5897\u3048\u3001\u73fe\u5b9f\u554f\u984c\u304b\u3089\u6d3e\u751f\u3057\u305f\u6570\u5341\u4e07~\u6570\u767e\u4e07\u306e\u5909\u6570\u306eSAT\u554f\u984c\u3092\u89e3\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Note \u672c\u8a18\u4e8b\u3068SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30fc\u30c9\u306f GitHub \u4e0a\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002pull request\u306f\u5927\u6b53\u8fce\u3067\u3059\u3002 \u8a00\u8a9e\u306f C++17 \u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u306f clang++ \u3068\u3057\u307e\u3059\u3002\u74b0\u5883\u306f Linux \u307e\u305f\u306f macOS \u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea( std )\u306e\u307f\u3060\u3051\u3068\u3057\u307e\u3059\u3002 \u4ee5\u4e0b\u306f\u7b46\u8005\u306e\u74b0\u5883\u3067\u3059\u3002 % cat /etc/os-release NAME=\"Ubuntu\" VERSION=\"20.04.1 LTS (Focal Fossa)\" ID=ubuntu ID_LIKE=debian PRETTY_NAME=\"Ubuntu 20.04.1 LTS\" VERSION_ID=\"20.04\" HOME_URL=\"https://www.ubuntu.com/\" SUPPORT_URL=\"https://help.ubuntu.com/\" BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\" PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\" VERSION_CODENAME=focal UBUNTU_CODENAME=focal % clang++ --version clang version 10.0.0-4ubuntu1 Target: x86_64-pc-linux-gnu Thread model: posix InstalledDir: /usr/bin C++17 \u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u672c\u8a18\u4e8b\u3067\u306f\u8a00\u8a9e\u81ea\u4f53\u306b\u3064\u3044\u3066\u306f\u8aac\u660e\u3044\u305f\u3057\u307e\u305b\u3093\u3002 \u305d\u308c\u3067\u306f\u59cb\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002","title":"\u306f\u3058\u3081\u306b"},{"location":"01_preparation/","text":"\u6e96\u5099 \u6211\u3005\u304c\u4f5c\u6210\u3059\u308bSAT\u30bd\u30eb\u30d0\u306f bullsat \u3068\u3057\u307e\u3059\u3002SAT\u30bd\u30eb\u30d0\u306e\u6a5f\u80fd\u3068\u3057\u3066\u306f\u6700\u5c0f\u9650\u3067(\u73fe\u4ee3SAT\u30bd\u30eb\u30d0\u3068\u6bd4\u8f03\u3057\u3066)\u8ce2\u304f\u306f\u306a\u304f\u3001\u554f\u984c\u304c\u89e3\u3051\u308b\u307e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u505c\u6b62\u3057\u307e\u305b\u3093\u3002 \u305d\u3053\u3067\u3072\u305f\u3059\u3089\u7a81\u3063\u8d70\u308b\u95d8\u725b\u306e bull \u3068 sat \u3067 bullsat \u3067\u3059\u3002\u3044\u3044\u540d\u524d\u3067\u3059\u306d\u3002 \u305d\u308c\u3067\u306f\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u6e96\u5099\u3057\u307e\u3057\u3087\u3046\u3002 % mkdir bullsat % cd bullsat % touch bullsat.hpp test.cpp main.cpp Makefile bullsat.hpp SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30fc\u30c9 test.cpp SAT\u30bd\u30eb\u30d0\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9 main.cpp SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3app Makefile release/debug\u30d3\u30eb\u30c9\u3084\u30c6\u30b9\u30c8 \u5404\u7ae0\u3067\u306f bullsat.hpp \u306bSAT\u30bd\u30eb\u30d0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5b9f\u88c5\u3057\u3001\u4e26\u884c\u3057\u3066 test.cpp \u306b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002SAT\u30bd\u30eb\u30d0\u304c\u5b8c\u6210\u3057\u305f\u5f8c\u306b main.cpp \u306bSAT\u30bd\u30eb\u30d0\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3app\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002 \u672c\u8a18\u4e8b\u3067\u306f\u5c0f\u3055\u3044\u6a5f\u80fd\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092 test.cpp \u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u3067\u9032\u3081\u307e\u3059\u3002 \u3082\u3061\u308d\u3093\u30c6\u30b9\u30c8\u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u3067\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u306e\u7406\u89e3\u3092\u6df1\u3081\u308b SAT\u30bd\u30eb\u30d0\u306e\u5b9f\u88c5\u306f\u975e\u5e38\u306b\u30d0\u30b0\u3092\u751f\u307f\u51fa\u3057\u3084\u3059\u304f\u3001\u307e\u305f\u30d0\u30b0\u306e\u539f\u56e0\u3092\u63a2\u308b\u306e\u304c\u975e\u5e38\u306b\u56f0\u96e3 \u4ee5\u4e0b\u304c test.cpp \u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002 #include \"bullsat.hpp\" #include <iostream> using namespace std; using namespace bullsat; void test_start(const char *funcname) { cerr << \"==================== \" << funcname << \" ==================== \" << endl; } int main() { cerr << \"===================== test ===================== \" << endl; } \u4efb\u610f\u3067\u3059\u304c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c4\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u306e\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f clang-format \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u5404\u7ae0\u3067\u306f\u7d30\u304b\u304f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u305f\u308a\u3001\u90fd\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u3067Makefile\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002 APP=bullsat CXX := clang++ CXXFLAGS := -std=c++17 -Weverything -Wno-c++98-compat-pedantic -Wno-missing-prototypes -Wno-padded DEBUGFLAGS := -g -fsanitize=undefined all: release debug release: main.cpp bullsat.hpp mkdir -p build/release/ $(CXX) $(CXXFLAGS) -O3 -DNDEBUG -o build/release/$(APP) main.cpp debug: main.cpp bullsat.hpp mkdir -p build/debug/ $(CXX) $(CXXFLAGS) $(DEBUGFLAGS) -o build/debug/$(APP) main.cpp test: test.cpp bullsat.hpp $(CXX) $(CXXFLAGS) $(DEBUGFLAGS) -o $@ test.cpp ./$@ format: clang-format -i *.cpp *.hpp clean: rm -rf build test *.o .PHONY: all release test format clean make release/debug SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3app\u3092\u30ea\u30ea\u30fc\u30b9/\u30c7\u30d0\u30c3\u30af\u30d3\u30eb\u30c9 make test \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c make format \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 make clean \u751f\u6210\u3057\u305f\u30d0\u30a4\u30ca\u30ea\u3084\u30b4\u30df\u3092\u524a\u9664","title":"\u6e96\u5099"},{"location":"01_preparation/#_1","text":"\u6211\u3005\u304c\u4f5c\u6210\u3059\u308bSAT\u30bd\u30eb\u30d0\u306f bullsat \u3068\u3057\u307e\u3059\u3002SAT\u30bd\u30eb\u30d0\u306e\u6a5f\u80fd\u3068\u3057\u3066\u306f\u6700\u5c0f\u9650\u3067(\u73fe\u4ee3SAT\u30bd\u30eb\u30d0\u3068\u6bd4\u8f03\u3057\u3066)\u8ce2\u304f\u306f\u306a\u304f\u3001\u554f\u984c\u304c\u89e3\u3051\u308b\u307e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u505c\u6b62\u3057\u307e\u305b\u3093\u3002 \u305d\u3053\u3067\u3072\u305f\u3059\u3089\u7a81\u3063\u8d70\u308b\u95d8\u725b\u306e bull \u3068 sat \u3067 bullsat \u3067\u3059\u3002\u3044\u3044\u540d\u524d\u3067\u3059\u306d\u3002 \u305d\u308c\u3067\u306f\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u6e96\u5099\u3057\u307e\u3057\u3087\u3046\u3002 % mkdir bullsat % cd bullsat % touch bullsat.hpp test.cpp main.cpp Makefile bullsat.hpp SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30fc\u30c9 test.cpp SAT\u30bd\u30eb\u30d0\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9 main.cpp SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3app Makefile release/debug\u30d3\u30eb\u30c9\u3084\u30c6\u30b9\u30c8 \u5404\u7ae0\u3067\u306f bullsat.hpp \u306bSAT\u30bd\u30eb\u30d0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5b9f\u88c5\u3057\u3001\u4e26\u884c\u3057\u3066 test.cpp \u306b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002SAT\u30bd\u30eb\u30d0\u304c\u5b8c\u6210\u3057\u305f\u5f8c\u306b main.cpp \u306bSAT\u30bd\u30eb\u30d0\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3app\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002 \u672c\u8a18\u4e8b\u3067\u306f\u5c0f\u3055\u3044\u6a5f\u80fd\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092 test.cpp \u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u3067\u9032\u3081\u307e\u3059\u3002 \u3082\u3061\u308d\u3093\u30c6\u30b9\u30c8\u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002 \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u3067\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u306e\u7406\u89e3\u3092\u6df1\u3081\u308b SAT\u30bd\u30eb\u30d0\u306e\u5b9f\u88c5\u306f\u975e\u5e38\u306b\u30d0\u30b0\u3092\u751f\u307f\u51fa\u3057\u3084\u3059\u304f\u3001\u307e\u305f\u30d0\u30b0\u306e\u539f\u56e0\u3092\u63a2\u308b\u306e\u304c\u975e\u5e38\u306b\u56f0\u96e3 \u4ee5\u4e0b\u304c test.cpp \u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002 #include \"bullsat.hpp\" #include <iostream> using namespace std; using namespace bullsat; void test_start(const char *funcname) { cerr << \"==================== \" << funcname << \" ==================== \" << endl; } int main() { cerr << \"===================== test ===================== \" << endl; } \u4efb\u610f\u3067\u3059\u304c\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c4\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u306e\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f clang-format \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u5404\u7ae0\u3067\u306f\u7d30\u304b\u304f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u305f\u308a\u3001\u90fd\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u3067Makefile\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002 APP=bullsat CXX := clang++ CXXFLAGS := -std=c++17 -Weverything -Wno-c++98-compat-pedantic -Wno-missing-prototypes -Wno-padded DEBUGFLAGS := -g -fsanitize=undefined all: release debug release: main.cpp bullsat.hpp mkdir -p build/release/ $(CXX) $(CXXFLAGS) -O3 -DNDEBUG -o build/release/$(APP) main.cpp debug: main.cpp bullsat.hpp mkdir -p build/debug/ $(CXX) $(CXXFLAGS) $(DEBUGFLAGS) -o build/debug/$(APP) main.cpp test: test.cpp bullsat.hpp $(CXX) $(CXXFLAGS) $(DEBUGFLAGS) -o $@ test.cpp ./$@ format: clang-format -i *.cpp *.hpp clean: rm -rf build test *.o .PHONY: all release test format clean make release/debug SAT\u30bd\u30eb\u30d0\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3app\u3092\u30ea\u30ea\u30fc\u30b9/\u30c7\u30d0\u30c3\u30af\u30d3\u30eb\u30c9 make test \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c make format \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 make clean \u751f\u6210\u3057\u305f\u30d0\u30a4\u30ca\u30ea\u3084\u30b4\u30df\u3092\u524a\u9664","title":"\u6e96\u5099"},{"location":"02_basic/","text":"SAT\u554f\u984c\u3092\u30b3\u30fc\u30c9\u3067\u8868\u73fe $$ (x_1\\lor\\lnot x_3)\\land(x_2\\lor x_3\\lor\\lnot x_1) $$ \u4e0a\u8a18\u306e\u3088\u3046\u306aSAT\u554f\u984c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7406\u89e3\u3059\u308b\u5f62\u306b\u8868\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 bullsat \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002 namespace bullsat { using Var = int; //\u547d\u984c\u5909\u6570: x1 struct Lit;\u3000//\u30ea\u30c6\u30e9\u30eb: x1 or !x1 using Clause = std::vector<Lit>; //\u7bc0: (x1 or !x2 or x3) } \u547d\u984c\u5909\u6570( Var ) int \u30ea\u30c6\u30e9\u30eb( Lit ) struct \u7bc0( Clause ) std::vector<Lit> \u30ea\u30c6\u30e9\u30eb\u306e\u5b9f\u88c5 \u30ea\u30c6\u30e9\u30eb\u306f \u6b63 \u306e\u30ea\u30c6\u30e9\u30eb\\(x_1\\)\u3068 \u8ca0 \u306e\u30ea\u30c6\u30e9\u30eb\\(\\lnot x_1\\)\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 \u6b63\u306e\u30ea\u30c6\u30e9\u30eb\u306f \u5076\u6570 \u3001\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb\u306f \u5947\u6570 \u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002 \u6b63\u306e\u30ea\u30c6\u30e9\u30eb: \\(x_0\\)\u306f 0 \u3001\\(x_1\\)\u306f 2 \u3001\\(x_2\\)\u306f 4 \u8ca0\u306e\u30ea\u30c6\u30e9\u30eb: \\(\\lnot x_0\\)\u306f 1 \u3001\\(\\lnot x_1\\)\u306f 3 \u3001\\(\\lnot x_2\\)\u306f 5 \u5c11\u3057\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u306e\u3067\u3059\u304c\u3001\u6b63/\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u6b63\u306e\u6574\u6570\u3068\u3057\u3066\u8868\u73fe\u3059\u308b\u3053\u3068\u3067SAT\u30bd\u30eb\u30d0\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u524d\u51e6\u7406\u3067\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 \u4ee5\u4e0b\u304c Lit \u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\u307e\u305f\u5fc5\u8981\u306a\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002 // x is // even: positive x0 (0 -> x0, 2 -> x1) // odd: negative !x0 (1 -> !x0, 3 -> !x1) struct Lit { int x; Lit() = default; Lit(const Lit &lit) = default; // 0-index // Lit(0, true) means x0 // Lit(0, false) means !x0 Lit(Var v, bool positive) { assert(v >= 0); x = positive ? 2 * v : 2 * v + 1; } bool operator==(Lit lit) const { return x == lit.x; } bool operator!=(Lit lit) const { return x != lit.x; } bool operator<(Lit lit) const { return x < lit.x; } bool pos() const { return !neg(); } bool neg() const { return x & 1; } Var var() const { return x >> 1; } size_t vidx() const { return static_cast<size_t>(var()); } size_t lidx() const { return static_cast<size_t>(x); } }; // ~x0 = !x0 inline Lit operator~(Lit p) { Lit q(p); q.x ^= 1; return q; } std::ostream &operator<<(std::ostream &os, const Lit &lit) { os << (lit.neg() ? \"!x\" : \"x\") << lit.var(); return os; } bool pos() : true \u306a\u3089\u6b63\u306e\u30ea\u30c6\u30e9\u30eb bool neg() : true \u306a\u3089\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb Var var() : \u547d\u984c\u5909\u6570\u3092\u53d6\u5f97 \u6b63/\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb\u304b\u3089\u547d\u984c\u5909\u6570\u306f\u73fe\u5728\u306e\u5024\u304b\u30891\u30d3\u30c3\u30c8\u53f3\u306b\u30b7\u30d5\u30c8(1/2) Lit operator~(Lit p) : \u30ea\u30c6\u30e9\u30eb\u306e\u5426\u5b9a(\\(x_0\\) -> \\(\\lnot x_0\\), \\(\\lnot x_0\\) -> \\(x_0\\)) \u4ee5\u4e0b\u306e\u95a2\u6570\u306f Variable \u3084 Lit \u3092index\u3068\u3057\u305f std::vector \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u5b9a\u7fa9\u3057\u305f\u3002 size_t vidx() : \u547d\u984c\u5909\u6570\u306b\u5909\u63db\u3057\u3066 size_t \u3068\u3057\u3066\u53d6\u5f97 size_t lidx() : \u30ea\u30c6\u30e9\u30eb\u3092 size_t \u3068\u3057\u3066\u53d6\u5f97 \u30c6\u30b9\u30c8 \u5b9f\u88c5\u3057\u305f\u30ea\u30c6\u30e9\u30eb\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092 test.cpp \u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002 void test_lit() { test_start(__func__); Lit x0 = Lit(0, true); // x0 Lit nx0 = ~x0; // !x0 assert(x0.lidx() == 0); assert(nx0.lidx() == 1); assert(x0.pos()); assert(!x0.neg()); assert(nx0.neg()); assert(x0.pos()); assert(x0.var() == nx0.var()); assert(x0 != nx0); assert(~x0 == nx0); assert(x0.lidx() == (~nx0).lidx()); Lit x1 = Lit(1, true); // x1 assert(x1.lidx() == 2); assert(x0 < x1); assert(!x1.neg()); } int main() { cerr << \"===================== test ===================== \" << endl; test_lit(); } \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u3092\u3057\u3066\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 % make test ./test ===================== test ===================== ==================== test_lit ====================","title":"SAT\u554f\u984c\u3092\u30b3\u30fc\u30c9\u3067\u8868\u73fe"},{"location":"02_basic/#sat","text":"$$ (x_1\\lor\\lnot x_3)\\land(x_2\\lor x_3\\lor\\lnot x_1) $$ \u4e0a\u8a18\u306e\u3088\u3046\u306aSAT\u554f\u984c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7406\u89e3\u3059\u308b\u5f62\u306b\u8868\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 bullsat \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002 namespace bullsat { using Var = int; //\u547d\u984c\u5909\u6570: x1 struct Lit;\u3000//\u30ea\u30c6\u30e9\u30eb: x1 or !x1 using Clause = std::vector<Lit>; //\u7bc0: (x1 or !x2 or x3) } \u547d\u984c\u5909\u6570( Var ) int \u30ea\u30c6\u30e9\u30eb( Lit ) struct \u7bc0( Clause ) std::vector<Lit>","title":"SAT\u554f\u984c\u3092\u30b3\u30fc\u30c9\u3067\u8868\u73fe"},{"location":"02_basic/#_1","text":"\u30ea\u30c6\u30e9\u30eb\u306f \u6b63 \u306e\u30ea\u30c6\u30e9\u30eb\\(x_1\\)\u3068 \u8ca0 \u306e\u30ea\u30c6\u30e9\u30eb\\(\\lnot x_1\\)\u304c\u5b58\u5728\u3057\u307e\u3059\u3002 \u6b63\u306e\u30ea\u30c6\u30e9\u30eb\u306f \u5076\u6570 \u3001\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb\u306f \u5947\u6570 \u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002 \u6b63\u306e\u30ea\u30c6\u30e9\u30eb: \\(x_0\\)\u306f 0 \u3001\\(x_1\\)\u306f 2 \u3001\\(x_2\\)\u306f 4 \u8ca0\u306e\u30ea\u30c6\u30e9\u30eb: \\(\\lnot x_0\\)\u306f 1 \u3001\\(\\lnot x_1\\)\u306f 3 \u3001\\(\\lnot x_2\\)\u306f 5 \u5c11\u3057\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u306e\u3067\u3059\u304c\u3001\u6b63/\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb\u3092\u6b63\u306e\u6574\u6570\u3068\u3057\u3066\u8868\u73fe\u3059\u308b\u3053\u3068\u3067SAT\u30bd\u30eb\u30d0\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u524d\u51e6\u7406\u3067\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002 \u4ee5\u4e0b\u304c Lit \u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\u307e\u305f\u5fc5\u8981\u306a\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002 // x is // even: positive x0 (0 -> x0, 2 -> x1) // odd: negative !x0 (1 -> !x0, 3 -> !x1) struct Lit { int x; Lit() = default; Lit(const Lit &lit) = default; // 0-index // Lit(0, true) means x0 // Lit(0, false) means !x0 Lit(Var v, bool positive) { assert(v >= 0); x = positive ? 2 * v : 2 * v + 1; } bool operator==(Lit lit) const { return x == lit.x; } bool operator!=(Lit lit) const { return x != lit.x; } bool operator<(Lit lit) const { return x < lit.x; } bool pos() const { return !neg(); } bool neg() const { return x & 1; } Var var() const { return x >> 1; } size_t vidx() const { return static_cast<size_t>(var()); } size_t lidx() const { return static_cast<size_t>(x); } }; // ~x0 = !x0 inline Lit operator~(Lit p) { Lit q(p); q.x ^= 1; return q; } std::ostream &operator<<(std::ostream &os, const Lit &lit) { os << (lit.neg() ? \"!x\" : \"x\") << lit.var(); return os; } bool pos() : true \u306a\u3089\u6b63\u306e\u30ea\u30c6\u30e9\u30eb bool neg() : true \u306a\u3089\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb Var var() : \u547d\u984c\u5909\u6570\u3092\u53d6\u5f97 \u6b63/\u8ca0\u306e\u30ea\u30c6\u30e9\u30eb\u304b\u3089\u547d\u984c\u5909\u6570\u306f\u73fe\u5728\u306e\u5024\u304b\u30891\u30d3\u30c3\u30c8\u53f3\u306b\u30b7\u30d5\u30c8(1/2) Lit operator~(Lit p) : \u30ea\u30c6\u30e9\u30eb\u306e\u5426\u5b9a(\\(x_0\\) -> \\(\\lnot x_0\\), \\(\\lnot x_0\\) -> \\(x_0\\)) \u4ee5\u4e0b\u306e\u95a2\u6570\u306f Variable \u3084 Lit \u3092index\u3068\u3057\u305f std::vector \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u5fc5\u8981\u3068\u306a\u308b\u305f\u3081\u5b9a\u7fa9\u3057\u305f\u3002 size_t vidx() : \u547d\u984c\u5909\u6570\u306b\u5909\u63db\u3057\u3066 size_t \u3068\u3057\u3066\u53d6\u5f97 size_t lidx() : \u30ea\u30c6\u30e9\u30eb\u3092 size_t \u3068\u3057\u3066\u53d6\u5f97","title":"\u30ea\u30c6\u30e9\u30eb\u306e\u5b9f\u88c5"},{"location":"02_basic/#_2","text":"\u5b9f\u88c5\u3057\u305f\u30ea\u30c6\u30e9\u30eb\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092 test.cpp \u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002 void test_lit() { test_start(__func__); Lit x0 = Lit(0, true); // x0 Lit nx0 = ~x0; // !x0 assert(x0.lidx() == 0); assert(nx0.lidx() == 1); assert(x0.pos()); assert(!x0.neg()); assert(nx0.neg()); assert(x0.pos()); assert(x0.var() == nx0.var()); assert(x0 != nx0); assert(~x0 == nx0); assert(x0.lidx() == (~nx0).lidx()); Lit x1 = Lit(1, true); // x1 assert(x1.lidx() == 2); assert(x0 < x1); assert(!x1.neg()); } int main() { cerr << \"===================== test ===================== \" << endl; test_lit(); } \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u3092\u3057\u3066\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002 % make test ./test ===================== test ===================== ==================== test_lit ====================","title":"\u30c6\u30b9\u30c8"}]}